import axios from 'axios'
import store from '@/store'
import router from '@/router'
import {Message} from 'iview'
import { getToken } from '@/utils/auth'
// 创建axios实例
const service = axios.create({
//  baseURL: process.env.BASE_API, // api的base_url
  timeout: 1800000                  // 请求超时时间
})

// request拦截器
service.interceptors.request.use(config => {
  if (getToken()) {
    config.headers['Authorization'] = 'Bearer ' + getToken() // 让每个请求携带token--['Authorization']为自定义key 请根据实际情况自行修改
  }
  return config
}, error => {
  console.log(error) // for debug
  Promise.reject(error)
})

// respone拦截器
service.interceptors.response.use(

  response => {
    const res = response.data
    if(Object.prototype.toString.call(res) == '[object Blob]'){
      return response;
    }else if(res.code === 200){
      return res;
    }else if(res.code === 700){
      store.dispatch("cleanToken");
      router.push("/login");
      return Promise.reject(res.message)
    }else{
      Message.error(res.message);
      return Promise.reject(res.message)
    }
  },
  error => {
    console.error('err' + error)// for debug
    return Promise.reject(error)
  }
)

export default service
